<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	        
	<!-- Configures the annotation programming model. -->
	<context:annotation-config />

	<!-- Scans the classpath of this application for components to deploy as beans. -->
	<context:component-scan base-package="com.kolich.pusachat.spring">
		<context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- Configures our default set of interceptors. -->
    <mvc:interceptors>
    
    	<mvc:interceptor>
    		<mvc:mapping path="/app/api/chat/**" />
        	<bean class="com.kolich.spring.interceptors.RequestPathInterceptor">
        		<property name="requestMappings">
	       			<list value-type="java.lang.String">
	       				<value>GET:\/((register\/[a-zA-Z0-9\-_]{1,200})|((event|log|message|typing|inactivity)\/[a-zA-Z0-9\-_]{1,200}))\.json$</value>
	       			</list>
	       		</property>
        	</bean>
    	</mvc:interceptor>
    	
    	<mvc:interceptor>
    		<mvc:mapping path="/app/api/room/**" />
        	<bean class="com.kolich.spring.interceptors.RequestPathInterceptor">
        		<property name="requestMappings">
	       			<list value-type="java.lang.String">
	       				<value>GET:\/(((create|join|random)\.json)|([a-zA-Z0-9\-_]{1,200}))$</value>
	       			</list>
	       		</property>
        	</bean>
    	</mvc:interceptor>
    	
    </mvc:interceptors>
	
	<!-- View resolvers -->
	
	<bean id="KolichContentNegotiatingViewResolver"
		class="com.kolich.spring.views.KolichContentNegotiatingViewResolver"
		p:order="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}">	
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="html" value="text/html" />
			</map>
		</property>
		<property name="defaultContentType" value="text/html" />
		<property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="viewResolvers">
			<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
				<property name="prefix" value="/WEB-INF/jsp/" />  
				<property name="suffix" value=".jsp" />
				<!--
					A list of beans by name that can be directly accessed in the
					view layer (in a JSP) using the ${...} notation.
				-->
				<property name="exposedContextBeanNames">
      				<list value-type="java.lang.String">
				         <value>PusaChatProperties</value>
      				</list>
   				</property>
			</bean>
		</property>
		<property name="globalDefaultView" value="errors/404-not-found" />
		<property name="defaultViews">
			<list>
				<bean class="com.kolich.spring.views.mappers.KolichMappingJSONView" />
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.HttpRequestMethodNotSupportedException">errors/404-not-found</prop>
				<prop key="org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException">errors/404-not-found</prop>
				<prop key="org.springframework.web.bind.MissingServletRequestParameterException">errors/400-bad-request</prop>
				<prop key="com.kolich.pusachat.exceptions.InvalidApiExtensionException">errors/404-not-found</prop>
				<prop key="com.kolich.pusachat.exceptions.RoomNotFoundException">errors/404-not-found</prop>
				<prop key="com.kolich.pusachat.exceptions.InvalidRoomNameException">errors/400-bad-request</prop>
				<prop key="com.kolich.pusachat.exceptions.NoChatRoomQueueFoundForSessionException">errors/412-precondition-failed</prop>
				<prop key="com.kolich.pusachat.exceptions.ClientNotRegisteredWithChatRoomException">errors/412-precondition-failed</prop>
				<prop key="com.kolich.pusachat.exceptions.BadChatTokenException">errors/400-bad-request</prop>												
				<prop key="com.kolich.pusachat.PusaChatException">errors/503-service-unavailable</prop>
				<prop key="java.lang.IllegalArgumentException">errors/400-bad-request</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/400-bad-request">400</prop>
				<prop key="errors/404-not-found">404</prop>
				<prop key="errors/412-unsupported-browser">412</prop>
				<prop key="errors/412-precondition-failed">412</prop>				
				<prop key="errors/500-uncaught">500</prop>
				<prop key="errors/503-service-unavailable">503</prop>
			</props>
		</property>
		<property name="defaultStatusCode" value="404" />
	</bean>
	
	<!-- It annoys me that all of my other bean ID's are CamelCase.  However,
			in this instance, the id has to start with a lower case letter so
			all beans in this context don't seem to necessairly follow the same
			pricipal. -->
	<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages"
			p:fallbackToSystemLocale="false" />
	
</beans>